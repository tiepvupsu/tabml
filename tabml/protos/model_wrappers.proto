syntax = "proto2";

package tabml.protos;


// Lgbm parameters in https://lightgbm.readthedocs.io/en/latest/Parameters.html
// Next id: 20
message LgbmModelParams {
    optional float learning_rate = 1;
    optional int32 n_estimators = 2;
    optional int32 num_leaves = 3;
    optional int32 max_depth = 4;
    optional string objective = 5 [default = 'regression'];
    optional float colsample_bytree = 6;
    optional float subsample = 7;
    optional float reg_alpha = 8;
    optional float min_split_gain = 9;
    optional float reg_lambda = 10;
    optional float min_child_weight = 11;
    optional int32 min_child_samples = 12;
    optional int32 random_state = 13 [default = 42];
    optional int32 subsample_freq = 14;
    optional int32 subsample_for_bin = 15;
    optional string boosting_type = 16;
    optional string metric = 17;
    optional int32 scale_pos_weight = 18;
    optional int32 max_bin = 19;
}

message LgbmFitParams{
    optional bool verbose = 1;
    optional int32 early_stopping_rounds = 2;
    repeated string categorical_feature = 3;
    // eval_metric in lgbm trainer param does not end with 's'.
    repeated string eval_metric = 4;
}

// XGBoost parameters in https://xgboost.readthedocs.io/en/latest/parameter.html
// Next id: 14
message XgboostModelParams {
    optional bool use_gpu = 1;
    optional int32 max_depth = 2;
    optional int32 n_estimators = 3;
    optional float gamma = 4;
    optional string objective = 5 [default = 'reg:squarederror'];
    optional float colsample_bytree = 6;
    optional float subsample = 7;
    optional float reg_alpha = 8;
    optional float reg_lambda = 9;
    optional float learning_rate = 10;
    optional float min_child_weight = 11;
    optional int32 seed = 12 [default = 42];
    optional string eval_metric = 13;
}

message XgboostFitParams{
    optional bool verbose = 1;
    optional int32 early_stopping_rounds = 2;
}

// CatBoost parameters https://catboost.ai/docs/search/?query=max_ctr_complexity
// Next id: 22
message CatboostModelParams {
    optional int32 od_wait = 1;
    optional int32 max_depth = 2;
    optional int32 n_estimators = 3;
    optional float learning_rate = 4;
    optional int32 random_state = 5 [default = 42];
    optional string objective = 6;
    optional float subsample = 7;
    optional float reg_lambda = 8;
    optional int32 one_hot_max_size = 9;
    optional int32 min_child_samples = 10;
    optional int32 bagging_temperature = 11;
    optional int32 border_count = 12;
    optional int32 max_ctr_complexity = 13;
    optional string od_type = 14;
    optional int32 num_leaves = 15;
    optional string bootstrap_type = 16;
    optional float colsample_bylevel = 17;
    optional float od_pval = 19;
    optional string grow_policy = 20;
    optional string eval_metric = 21;
}

// TODO: add CatBoostFitParams

message ModelWrapper {
    required string cls_name = 1;

    oneof model_params {
        LgbmModelParams lgbm_model_params = 2;
        XgboostModelParams xgboost_model_params = 3;
        CatboostModelParams catboost_model_params = 4;
    }

    oneof fit_params {
        LgbmFitParams lgbm_fit_params = 5;
        XgboostFitParams xgboost_fit_params = 6;
    }
}
